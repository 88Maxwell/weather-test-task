{"version":3,"sources":["components/Wether/WetherWidgetRecord/WetherWidgetRecord.js","components/Wether/WetherWidgetRecord/index.js","domens/Wether/wetherPropTypes.js","components/Wether/WetherWidget/WetherWidget.js","components/Wether/WetherWidget/index.js","hooks/usePosition.js","components/Common/LoaderHelper/LoaderHelper.js","components/Common/LoaderHelper/index.js","components/Wether/WetherPage/WetherPage.js","components/Wether/WetherPage/index.js","domens/Common/createLoadableReducer.js","reducers/wether/current.js","actionTypes/wether.js","domens/Common/RequestClient.js","config.js","domens/Wether/wetherApi.js","actions/getWether.js","containers/Wether/WetherPageContainer.js","domens/Wether/constants.js","components/Common/StartPage/StartPage.js","components/Common/StartPage/index.js","containers/Common/StartPageContainer.js","components/Common/Routes/index.js","components/Common/Routes/Routes.js","components/Common/App/App.js","components/Common/App/index.js","reducers/wether/index.js","index.js","domens/Common/configureStore.js","reducers/index.js"],"names":["WetherWidgetRecord","WetherCardRecord","header","description","List","Item","size","Content","Header","Description","PropTypes","shape","lon","number","lat","arrayOf","id","main","string","icon","temp","pressure","humidity","temp_min","temp_max","speed","deg","all","type","message","sunrise","sunset","country","WetherWidget","wether","wind","name","Segment","divided","defaultSettings","enableHighAccuracy","timeout","Infinity","maximumAge","watch","settings","useState","position","setPosition","error","setError","onChange","coords","timestamp","latitude","longitude","accuracy","onError","err","useEffect","navigator","geolocation","watcher","watchPosition","getCurrentPosition","clearWatch","LoaderHelper","data","state","LoadingComponent","ErrorComponent","DataComponent","propTypes","any","oneOf","isRequired","node","defaultProps","WetherPage","wetherState","wetherError","onGetWether","onGoBack","location","usePosition","search","city","qs","parse","slice","Grid","as","verticalAlign","padded","centered","Row","basic","Button","labelPosition","onClick","content","Loader","active","Message","negative","initialState","createLoadableReducer","requestActionType","successActionType","failureActionType","localInitialState","handleActions","payload","getRoot","current","getWetherState","createSelector","getWetherError","getWether","RequestClient","apiUrl","prefix","queryObject","this","token","forEach","method","url","params","a","request","toUpperCase","body","query","queryString","stringify","fetchUrl","fetch","withCredentials","crossDomain","JSON","undefined","response","json","cod","process","common","publicUrl","openWeatherMap","REACT_APP_API_URL","REACT_APP_PREFIX","appid","REACT_APP_APP_ID","openWetherApiMapRequest","config","get","getWetherRequest","createAction","getWetherSuccess","getWetherFailure","q","dispatch","wetherApi","res","mapState","createStructuredSelector","withRouter","connect","getWetherAction","onOpenWetherByCity","push","goBack","cities","value","text","StartPage","dropdownValue","setDropdownValue","warningVisible","setWarningVisible","onDismiss","warning","Dropdown","e","options","placeholder","selection","disabled","Routes","path","component","WetherPageContainer","StartPageContainer","App","history","store","combineReducers","createBrowserHistory","middlewares","thunk","routerMiddleware","rootReducer","router","connectRouter","configureRootReducer","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.107e2232.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"semantic-ui-react\";\n\nfunction WetherWidgetRecord({ header = \"header\", description = \"description,\" }) {\n    return (\n        <List.Item size=\"large\">\n            <List.Content>\n                <List.Header>{header}</List.Header>\n                <List.Description>{description}</List.Description>\n            </List.Content>\n        </List.Item>\n    );\n}\n\nWetherWidgetRecord.propTypes = {\n    header      : PropTypes.string.isRequired,\n    description : PropTypes.string.isRequired\n};\n\nexport default WetherWidgetRecord;\n","import WetherCardRecord from \"./WetherWidgetRecord\";\n\nexport default WetherCardRecord;\n","/* eslint-disable camelcase */\nimport PropTypes from \"prop-types\";\n\nexport default {\n    coord : PropTypes.shape({\n        lon : PropTypes.number,\n        lat : PropTypes.number\n    }),\n    weather : PropTypes.arrayOf(\n        PropTypes.shape({\n            id          : PropTypes.number,\n            main        : PropTypes.string,\n            description : PropTypes.string,\n            icon        : PropTypes.string\n        })\n    ),\n\n    base : PropTypes.string,\n    main : PropTypes.shape({\n        temp     : PropTypes.number,\n        pressure : PropTypes.number,\n        humidity : PropTypes.number,\n        temp_min : PropTypes.number,\n        temp_max : PropTypes.number\n    }),\n    visibility : PropTypes.number,\n    wind       : PropTypes.shape({\n        speed : PropTypes.number,\n        deg   : PropTypes.number\n    }),\n    clouds : PropTypes.shape({\n        all : PropTypes.number\n    }),\n    dt  : PropTypes.number,\n    sys : PropTypes.shape({\n        type    : PropTypes.number,\n        id      : PropTypes.number,\n        message : PropTypes.number,\n        sunrise : PropTypes.number,\n        sunset  : PropTypes.number,\n        country : PropTypes.string\n    }),\n    id   : PropTypes.number,\n    name : PropTypes.string,\n    cod  : PropTypes.number\n};\n","import React from \"react\";\nimport { List, Segment, Header } from \"semantic-ui-react\";\nimport WetherWidgetRecord from \"../WetherWidgetRecord\";\nimport wetherPropTypes from \"../../../domens/Wether/wetherPropTypes\";\n\nfunction WetherWidget({ wether }) {\n    const { main, wind, name } = wether;\n\n    return (\n        <Segment>\n            <Header>{name}</Header>\n            <List divided>\n                <WetherWidgetRecord header=\"temperature\" description={`${main.temp} ° F`} />\n                <WetherWidgetRecord header=\"max temperature\" description={`${main.temp_max} ° F`} />\n                <WetherWidgetRecord header=\"min temperature\" description={`${main.temp_min} ° F`} />\n                <WetherWidgetRecord header=\"pressure\" description={`${main.pressure} atm`} />\n                <WetherWidgetRecord header=\"wind speed\" description={`${wind.speed} m/s`} />\n                <WetherWidgetRecord header=\"wind degree\" description={`${wind.deg} °`} />\n            </List>\n        </Segment>\n    );\n}\n\nWetherWidget.propTypes = wetherPropTypes;\n\nexport default WetherWidget;\n","import WetherWidget from \"./WetherWidget\";\n\nexport default WetherWidget;\n","import { useState, useEffect } from \"react\";\n\nconst defaultSettings = {\n    enableHighAccuracy : false,\n    timeout            : Infinity,\n    maximumAge         : 0\n};\n\nexport default (watch = false, settings = defaultSettings) => {\n    const [ position, setPosition ] = useState(null);\n    const [ error, setError ] = useState(null);\n\n    const onChange = ({ coords, timestamp }) => {\n        setPosition({\n            latitude  : coords.latitude,\n            longitude : coords.longitude,\n            accuracy  : coords.accuracy,\n            timestamp\n        });\n    };\n\n    const onError = (err) => {\n        setError(err.message);\n    };\n\n    useEffect(() => {\n        if (!navigator || !navigator.geolocation) {\n            setError(\"Geolocation is not supported\");\n\n            return;\n        }\n\n        let watcher = null;\n\n        if (watch) {\n            watcher = navigator.geolocation.watchPosition(onChange, onError, settings);\n        } else {\n            navigator.geolocation.getCurrentPosition(onChange, onError, settings);\n        }\n\n        // eslint-disable-next-line consistent-return\n        return () => watcher && navigator.geolocation.clearWatch(watcher);\n    }, [ settings.enableHighAccuracy, settings.timeout, settings.maximumAge, settings, watch ]);\n\n    return { position, error };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction LoaderHelper({\n    data, state, LoadingComponent, ErrorComponent = null, DataComponent\n}) {\n    return (\n        <>\n            {data && state === \"loaded\" && DataComponent}\n            {!data && state === \"loading\" && LoadingComponent}\n            {state === \"error\" && ErrorComponent}\n        </>\n    );\n}\n\nLoaderHelper.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    data             : PropTypes.any,\n    state            : PropTypes.oneOf([ \"error\", \"loaded\", \"loading\" ]).isRequired,\n    LoadingComponent : PropTypes.node.isRequired,\n    ErrorComponent   : PropTypes.node.isRequired,\n    DataComponent    : PropTypes.node.isRequired\n};\n\n\nLoaderHelper.defaultProps = {\n    data : null\n};\n\nexport default LoaderHelper;\n","import LoaderHelper from \"./LoaderHelper\";\n\nexport default LoaderHelper;\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useEffect } from \"react\";\nimport qs from \"qs\";\nimport PropTypes from \"prop-types\";\nimport {\n    Grid, Loader, Message, Button, Segment\n} from \"semantic-ui-react\";\nimport WetherWidget from \"../WetherWidget\";\nimport usePosition from \"../../../hooks/usePosition\";\nimport LoaderHelper from \"../../Common/LoaderHelper\";\n\nfunction WetherPage({\n    wetherState, wetherError, wether, onGetWether, onGoBack, location\n}) {\n    const { position } = usePosition(false);\n\n    const { search } = location;\n\n    const { city } = qs.parse(search.slice(1));\n\n    useEffect(() => {\n        const { latitude: lat, longitude: lon } = position || {};\n\n        if (city) {\n            onGetWether({ city });\n        } else {\n            onGetWether({ lat, lon });\n        }\n    }, [ onGetWether, city, position ]);\n\n\n    return (\n        <Grid as=\"main\" verticalAlign=\"middle\" padded centered>\n            <Grid.Row>\n                <Segment basic>\n                    <Button labelPosition=\"left\" onClick={onGoBack} icon=\"left chevron\" content=\"Back\" />\n                </Segment>\n            </Grid.Row>\n            <Grid.Row>\n                <LoaderHelper\n                    data={wether}\n                    state={wetherState}\n                    LoadingComponent={<Loader active />}\n                    DataComponent={<WetherWidget wether={wether} />}\n                    ErrorComponent={(\n                        <Message negative>\n                            <Message.Header>Something happened wrong!</Message.Header>\n                            <p>{wetherError}</p>\n                        </Message>\n                    )}\n                />\n            </Grid.Row>\n        </Grid>\n    );\n}\n\nWetherPage.propTypes = {\n    onGoBack    : PropTypes.func.isRequired,\n    onGetWether : PropTypes.func.isRequired,\n    location    : PropTypes.object.isRequired,\n    wetherState : PropTypes.string,\n    wetherError : PropTypes.any,\n    wether      : PropTypes.object\n};\n\nWetherPage.defaultProps = {\n    wetherState : null,\n    wetherError : null,\n    wether      : null\n};\n\nexport default WetherPage;\n","import WetherPage from \"./WetherPage\";\n\nexport default WetherPage;\n","import { handleActions } from \"redux-actions\";\n\nconst initialState = {\n    state : null, // 'loading', 'error', 'loaded'\n    error : null,\n    data  : null\n};\n\nexport default function createLoadableReducer({ requestActionType, successActionType, failureActionType }) {\n    const localInitialState = { ...initialState };\n\n    return handleActions(\n        {\n            [requestActionType] : (state) => ({\n                ...state,\n                state : \"loading\",\n                error : null\n            }),\n            [successActionType] : (state, { payload }) => ({ ...state, state: \"loaded\", data: payload }),\n            [failureActionType] : (state, { payload }) => ({ ...state, state: \"error\", error: payload })\n        },\n        localInitialState\n    );\n}\n","import { createSelector } from \"reselect\";\n\nimport { GET_WETHER_SUCCESS, GET_WETHER_REQUEST, GET_WETHER_FAIL } from \"../../actionTypes/wether\";\n\nimport createLoadableReducer from \"../../domens/Common/createLoadableReducer\";\n\nexport default createLoadableReducer({\n    requestActionType : GET_WETHER_REQUEST,\n    successActionType : GET_WETHER_SUCCESS,\n    failureActionType : GET_WETHER_FAIL\n});\n\nconst getRoot = (state) => state.wether.current;\n\nconst getWetherState = createSelector(getRoot, (state) => state.state);\nconst getWetherError = createSelector(getRoot, (state) => state.error);\nconst getWether = createSelector(getRoot, (state) => state.data);\n\nexport { getWetherState, getWetherError, getWether };\n","export const GET_WETHER_SUCCESS = \"GET_WETHER_SUCCESS\";\nexport const GET_WETHER_REQUEST = \"GET_WETHER_REQUEST\";\nexport const GET_WETHER_FAIL = \"GET_WETHER_FAIL\";\n","import queryString from \"query-string\";\n\nconst defaultApiUrl = \"http://localhost:3000/\";\nconst defaultApiPrefix = \"api/v1\";\n\nclass RequestClient {\n    constructor({ apiUrl = defaultApiUrl, prefix = defaultApiPrefix } = {}, queryObject = {}) {\n        this.queryObject = queryObject;\n        this.prefix = prefix;\n        this.apiUrl = apiUrl;\n        this.token = \"\";\n        [ \"get\", \"post\", \"patch\", \"delete\" ].forEach((method) => {\n            this[method] = async (url, data, params) => this.request({\n                method : method.toUpperCase(),\n                body   : data,\n                url,\n                params\n            });\n        });\n    }\n\n    async request({\n        url, method, body, params = {}\n    }) {\n        let queryObject = params;\n\n        if (this.queryObject) {\n            queryObject = { ...this.queryObject, ...params };\n        }\n        const query = `?${queryString.stringify(queryObject)}`;\n        const fetchUrl = `${this.apiUrl}/${this.prefix}${url}${query}`;\n        const response = await fetch(fetchUrl, {\n            method,\n            withCredentials : true,\n            crossDomain     : true,\n            body            : method !== \"GET\" ? JSON.stringify(body) : undefined\n        });\n\n        const json = await response.json();\n\n        if (+json.cod !== 200) {\n            throw json.message;\n        }\n\n        return json;\n    }\n}\n\nexport default RequestClient;\n","const {\n    REACT_APP_API_URL,\n    REACT_APP_PREFIX,\n    REACT_APP_APP_ID\n} = process.env;\n\nexport default {\n    common : {\n        publicUrl : process.env.PUBLIC_URL\n    },\n    openWeatherMap : {\n        apiUrl : REACT_APP_API_URL,\n        prefix : REACT_APP_PREFIX,\n        appid  : REACT_APP_APP_ID\n    }\n};\n","import RequestClient from \"../Common/RequestClient\";\nimport config from \"../../config\";\n\nconst openWetherApiMapRequest = new RequestClient(\n    {\n        apiUrl : config.openWeatherMap.apiUrl,\n        prefix : config.openWeatherMap.prefix\n    },\n    {\n        appid : config.openWeatherMap.appid\n    }\n);\n\nexport default {\n    getWether : (params) => openWetherApiMapRequest.get(\"/weather\", null, params)\n};\n","import { createAction } from \"redux-actions\";\nimport { GET_WETHER_SUCCESS, GET_WETHER_REQUEST, GET_WETHER_FAIL } from \"../actionTypes/wether\";\nimport wetherApi from \"../domens/Wether/wetherApi\";\n\nexport const getWetherRequest = createAction(GET_WETHER_REQUEST);\nexport const getWetherSuccess = createAction(GET_WETHER_SUCCESS);\nexport const getWetherFailure = createAction(GET_WETHER_FAIL);\n\nexport default function getWether({ lat = 35, lon = 139, city: q = \"Kyiv\" }) {\n    return async (dispatch) => {\n        const data = {\n            lat,\n            lon,\n            q\n        };\n\n        dispatch(getWetherRequest(data));\n        try {\n            const res = await wetherApi.getWether(data);\n\n            dispatch(getWetherSuccess(res));\n\n            return res;\n        } catch (err) {\n            dispatch(getWetherFailure(err));\n\n            return null;\n        }\n    };\n}\n","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router\";\nimport { push, goBack } from \"connected-react-router\";\nimport WetherPage from \"../../components/Wether/WetherPage\";\n\nimport { getWetherState, getWetherError, getWether } from \"../../reducers/wether/current\";\nimport getWetherAction from \"../../actions/getWether\";\n\nconst mapState = createStructuredSelector({\n    wetherState : getWetherState,\n    wetherError : getWetherError,\n    wether      : getWether\n});\n\nconst mapDispatch = (dispatch) => ({\n    onGetWether        : ({ lat, lon, city }) => dispatch(getWetherAction({ lat, lon, city })),\n    onOpenWetherByCity : ({ city }) => dispatch(push(`/?city=${city}`)),\n    onGoBack           : () => dispatch(goBack())\n});\n\nexport default withRouter(connect(mapState, mapDispatch)(WetherPage));\n","export const cities = [\n    { value: \"Kyiv\", text: \"Kyiv\" },\n    { value: \"Lviv\", text: \"Lviv\" },\n    { value: \"Odesa\", text: \"Odesa\" },\n    { value: \"Kharkiv\", text: \"Kharkiv\" }\n];\n","/* eslint-disable react/forbid-prop-types */\nimport React, { useEffect, useState } from \"react\";\nimport qs from \"qs\";\nimport PropTypes from \"prop-types\";\nimport {\n    Grid, Loader, Message, Dropdown, Button, Segment, Header\n} from \"semantic-ui-react\";\nimport WetherWidget from \"../../Wether/WetherWidget\";\nimport usePosition from \"../../../hooks/usePosition\";\nimport LoaderHelper from \"../LoaderHelper\";\nimport { cities } from \"../../../domens/Wether/constants\";\n\nfunction StartPage({\n    wetherState, wetherError, wether, onGetWether, onOpenWetherByCity, location\n}) {\n    const { position } = usePosition(false);\n    const [ dropdownValue, setDropdownValue ] = useState(null);\n    const [ warningVisible, setWarningVisible ] = useState(true);\n\n    const { city } = qs.parse(location.search.slice(1));\n\n    useEffect(() => {\n        const { latitude: lat, longitude: lon } = position || {};\n\n        if (city) {\n            onGetWether({ city });\n        } else {\n            onGetWether({ lat, lon });\n        }\n    }, [ onGetWether, city, position ]);\n\n    const handleDismissWarning = () => setWarningVisible(false);\n    const handleChangeDropdownValue = (e, { value }) => setDropdownValue(value);\n    const handleOpenWetherByCity = () => dropdownValue && onOpenWetherByCity({ city: dropdownValue });\n\n    return (\n        <Grid as=\"main\" verticalAlign=\"middle\" padded centered>\n            <Grid.Row>\n                {position ? (\n                    <LoaderHelper\n                        data={wether}\n                        state={wetherState}\n                        LoadingComponent={<Loader active />}\n                        DataComponent={<WetherWidget wether={wether} />}\n                        ErrorComponent={(\n                            <Message negative>\n                                <Message.Header>Something happened wrong!</Message.Header>\n                                <p>{wetherError}</p>\n                            </Message>\n                        )}\n                    />\n                ) : (\n                    warningVisible && (\n                        <Message onDismiss={handleDismissWarning} warning>\n                            <Message.Header>Please enable geolocation!</Message.Header>\n                        </Message>\n                    )\n                )}\n            </Grid.Row>\n\n            <Grid.Row>\n                <Segment>\n                    <Header>Watch wether by city</Header>\n                    <Dropdown\n                        onChange={handleChangeDropdownValue}\n                        options={cities}\n                        placeholder=\"Choose an option\"\n                        selection\n                        value={dropdownValue}\n                    />\n                    <Button disabled={!dropdownValue} onClick={handleOpenWetherByCity}>\n                        Watch\n                    </Button>\n                </Segment>\n            </Grid.Row>\n        </Grid>\n    );\n}\n\nStartPage.propTypes = {\n    onOpenWetherByCity : PropTypes.func.isRequired,\n    onGetWether        : PropTypes.func.isRequired,\n    location           : PropTypes.object.isRequired,\n    wetherState        : PropTypes.string,\n    wetherError        : PropTypes.any,\n    wether             : PropTypes.object\n};\n\nStartPage.defaultProps = {\n    wetherState : null,\n    wetherError : null,\n    wether      : null\n};\n\nexport default StartPage;\n","import StartPage from \"./StartPage\";\n\nexport default StartPage;\n","import { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router\";\nimport { push } from \"connected-react-router\";\nimport StartPage from \"../../components/Common/StartPage\";\n\nimport { getWetherState, getWetherError, getWether } from \"../../reducers/wether/current\";\nimport getWetherAction from \"../../actions/getWether\";\n\nconst mapState = createStructuredSelector({\n    wetherState : getWetherState,\n    wetherError : getWetherError,\n    wether      : getWether\n});\n\nconst mapDispatch = (dispatch) => ({\n    onGetWether        : ({ lat, lon, city }) => dispatch(getWetherAction({ lat, lon, city })),\n    onOpenWetherByCity : ({ city }) => dispatch(push(`/wether?city=${city}`))\n});\n\nexport default withRouter(connect(mapState, mapDispatch)(StartPage));\n","import Routes from \"./Routes\";\n\nexport default Routes;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport WetherPageContainer from \"../../../containers/Wether/WetherPageContainer\";\nimport StartPageContainer from \"../../../containers/Common/StartPageContainer\";\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/wether\" component={WetherPageContainer} />\n            <Route path=\"/\" component={StartPageContainer} />\n        </Switch>\n    );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport Routes from \"../Routes\";\n\nfunction App({ history, store }) {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <Routes />\n            </ConnectedRouter>\n        </Provider>\n    );\n}\n\nApp.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    history : PropTypes.object.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    store   : PropTypes.object.isRequired\n};\n\nexport default App;\n","import App from \"./App\";\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport current from \"./current\";\n\nexport default combineReducers({ current });\n","import \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport App from \"./components/Common/App\";\nimport configureStore from \"./domens/Common/configureStore\";\n\nconst history = createBrowserHistory();\nconst store = configureStore({ history });\n\nReactDOM.render(<App store={store} history={history} />, document.getElementById(\"root\"));\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport configureRootReducer from \"../../reducers\";\n\nexport default function configureStoreGlobal({ history }) {\n    const middlewares = [ thunk ];\n\n    if (history) {\n        middlewares.push(routerMiddleware(history));\n    }\n\n    const rootReducer = configureRootReducer({ history });\n\n    return createStore(rootReducer, undefined, compose(applyMiddleware(...middlewares)));\n}\n","// eslint-disable-next-line import/prefer-default-export\nimport { combineReducers } from \"redux\";\nimport { connectRouter } from \"connected-react-router\";\nimport wether from \"./wether\";\n\nexport default ({ history }) => combineReducers({\n    router : connectRouter(history),\n    wether\n});\n"],"sourceRoot":""}